"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAppSyncResourceName = exports.getAppSyncAuthConfig = exports.checkIfAuthExists = exports.authConfigHasApiKey = void 0;
const authConfigHasApiKey = authConfig => {
    if (!authConfig) {
        return false;
    }
    return (Array.of(authConfig.defaultAuthentication)
        .concat(authConfig.additionalAuthenticationProviders)
        .filter(auth => !!auth)
        .map(auth => auth.authenticationType)
        .findIndex(authType => authType === 'API_KEY') > -1);
};
exports.authConfigHasApiKey = authConfigHasApiKey;
const checkIfAuthExists = context => {
    const { amplify } = context;
    const { amplifyMeta } = amplify.getProjectDetails();
    let authResourceName;
    const authServiceName = 'Cognito';
    const authCategoryName = 'auth';
    if (amplifyMeta[authCategoryName] && Object.keys(amplifyMeta[authCategoryName]).length > 0) {
        const categoryResources = amplifyMeta[authCategoryName];
        Object.keys(categoryResources).forEach(resource => {
            if (categoryResources[resource].service === authServiceName) {
                authResourceName = resource;
            }
        });
    }
    return authResourceName;
};
exports.checkIfAuthExists = checkIfAuthExists;
const getAppSyncAuthConfig = projectMeta => {
    const entry = getAppSyncAmplifyMetaEntry(projectMeta);
    if (entry) {
        const value = entry[1];
        return value && value.output ? value.output.authConfig : {};
    }
};
exports.getAppSyncAuthConfig = getAppSyncAuthConfig;
const getAppSyncResourceName = (projectMeta) => {
    const entry = getAppSyncAmplifyMetaEntry(projectMeta);
    if (entry) {
        return entry[0];
    }
};
exports.getAppSyncResourceName = getAppSyncResourceName;
const getAppSyncAmplifyMetaEntry = (projectMeta) => {
    return Object.entries(projectMeta.api || {}).find(([, value]) => value.service === 'AppSync');
};
//# sourceMappingURL=amplify-meta-utils.js.map