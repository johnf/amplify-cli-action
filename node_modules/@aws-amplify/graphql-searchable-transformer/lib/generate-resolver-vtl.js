"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.responseTemplate = exports.requestTemplate = void 0;
const graphql_mapping_template_1 = require("graphql-mapping-template");
const graphql_transformer_common_1 = require("graphql-transformer-common");
function requestTemplate(primaryKey, nonKeywordFields, includeVersion = false, type) {
    return graphql_mapping_template_1.print(graphql_mapping_template_1.compoundExpression([
        graphql_mapping_template_1.set(graphql_mapping_template_1.ref('indexPath'), graphql_mapping_template_1.str(`/${type.toLowerCase()}/doc/_search`)),
        graphql_mapping_template_1.set(graphql_mapping_template_1.ref('nonKeywordFields'), graphql_mapping_template_1.list(nonKeywordFields)),
        graphql_mapping_template_1.ifElse(graphql_mapping_template_1.ref('util.isNullOrEmpty($context.args.sort)'), graphql_mapping_template_1.compoundExpression([graphql_mapping_template_1.set(graphql_mapping_template_1.ref('sortDirection'), graphql_mapping_template_1.str('desc')), graphql_mapping_template_1.set(graphql_mapping_template_1.ref('sortField'), graphql_mapping_template_1.str(primaryKey))]), graphql_mapping_template_1.compoundExpression([
            graphql_mapping_template_1.set(graphql_mapping_template_1.ref('sortDirection'), graphql_mapping_template_1.ref('util.defaultIfNull($context.args.sort.direction, "desc")')),
            graphql_mapping_template_1.set(graphql_mapping_template_1.ref('sortField'), graphql_mapping_template_1.ref(`util.defaultIfNull($context.args.sort.field, "${primaryKey}")`)),
        ])),
        graphql_mapping_template_1.ifElse(graphql_mapping_template_1.ref('nonKeywordFields.contains($sortField)'), graphql_mapping_template_1.compoundExpression([graphql_mapping_template_1.set(graphql_mapping_template_1.ref('sortField0'), graphql_mapping_template_1.ref('util.toJson($sortField)'))]), graphql_mapping_template_1.compoundExpression([graphql_mapping_template_1.set(graphql_mapping_template_1.ref('sortField0'), graphql_mapping_template_1.ref('util.toJson("${sortField}.keyword")'))])),
        graphql_mapping_template_1.ElasticsearchMappingTemplate.searchItem({
            path: graphql_mapping_template_1.str('$indexPath'),
            size: graphql_mapping_template_1.ifElse(graphql_mapping_template_1.ref('context.args.limit'), graphql_mapping_template_1.ref('context.args.limit'), graphql_mapping_template_1.int(graphql_transformer_common_1.ResourceConstants.DEFAULT_SEARCHABLE_PAGE_LIMIT), true),
            search_after: graphql_mapping_template_1.list([graphql_mapping_template_1.ref('util.toJson($context.args.nextToken)')]),
            from: graphql_mapping_template_1.ref('context.args.from'),
            version: graphql_mapping_template_1.bool(includeVersion),
            query: graphql_mapping_template_1.ifElse(graphql_mapping_template_1.ref('context.args.filter'), graphql_mapping_template_1.ref('util.transform.toElasticsearchQueryDSL($ctx.args.filter)'), graphql_mapping_template_1.obj({
                match_all: graphql_mapping_template_1.obj({}),
            })),
            sort: graphql_mapping_template_1.list([graphql_mapping_template_1.raw('{$sortField0: { "order" : $util.toJson($sortDirection) }}')]),
        }),
    ]));
}
exports.requestTemplate = requestTemplate;
function responseTemplate(includeVersion = false) {
    return graphql_mapping_template_1.print(graphql_mapping_template_1.compoundExpression([
        graphql_mapping_template_1.set(graphql_mapping_template_1.ref('es_items'), graphql_mapping_template_1.list([])),
        graphql_mapping_template_1.forEach(graphql_mapping_template_1.ref('entry'), graphql_mapping_template_1.ref('context.result.hits.hits'), [
            graphql_mapping_template_1.iff(graphql_mapping_template_1.raw('!$foreach.hasNext'), graphql_mapping_template_1.set(graphql_mapping_template_1.ref('nextToken'), graphql_mapping_template_1.ref('entry.sort.get(0)'))),
            ...getSourceMapper(includeVersion),
        ]),
        graphql_mapping_template_1.toJson(graphql_mapping_template_1.obj({
            items: graphql_mapping_template_1.ref('es_items'),
            total: graphql_mapping_template_1.ref('ctx.result.hits.total'),
            nextToken: graphql_mapping_template_1.ref('nextToken'),
        })),
    ]));
}
exports.responseTemplate = responseTemplate;
function getSourceMapper(includeVersion) {
    if (includeVersion) {
        return [
            graphql_mapping_template_1.set(graphql_mapping_template_1.ref('row'), graphql_mapping_template_1.methodCall(graphql_mapping_template_1.ref('entry.get'), graphql_mapping_template_1.str('_source'))),
            graphql_mapping_template_1.qref('$row.put("_version", $entry.get("_version"))'),
            graphql_mapping_template_1.qref('$es_items.add($row)'),
        ];
    }
    return [graphql_mapping_template_1.qref('$es_items.add($entry.get("_source"))')];
}
//# sourceMappingURL=generate-resolver-vtl.js.map