import { FeatureFlagProvider, TransformerPluginProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { AppSyncAuthConfiguration, TransformConfig } from './transformer-config';
import Template, { DeploymentResources } from './types';
export interface GraphQLTransformOptions {
    readonly transformers: TransformerPluginProvider[];
    readonly stackMapping?: StackMapping;
    readonly transformConfig?: TransformConfig;
    readonly authConfig?: AppSyncAuthConfiguration;
    readonly buildParameters?: Record<string, any>;
    readonly stacks?: Record<string, Template>;
    readonly featuerFlags?: FeatureFlagProvider;
}
export declare type StackMapping = {
    [resourceId: string]: string;
};
export declare class GraphQLTransform {
    private readonly options;
    private transformers;
    private stackMappingOverrides;
    private app;
    private readonly authConfig;
    private readonly buildParameters;
    private seenTransformations;
    constructor(options: GraphQLTransformOptions);
    transform(schema: string): DeploymentResources;
    private generateGraphQlApi;
    private synthesize;
    private collectResolvers;
    private transformObject;
    private transformField;
    private transformArgument;
    private transformInterface;
    private transformScalar;
    private transformUnion;
    private transformEnum;
    private transformEnumValue;
    private transformInputObject;
    private transformInputField;
}
//# sourceMappingURL=transform.d.ts.map