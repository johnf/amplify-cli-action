import { StackManagerProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { Stack, App, CfnParameter, CfnParameterProps } from '@aws-cdk/core';
import { TransformerRootStack } from '../cdk-compat';
export declare type ResourceToStackMap = Record<string, string>;
export declare class StackManager implements StackManagerProvider {
    private stacks;
    private stackSynthesizer;
    readonly rootStack: TransformerRootStack;
    private resourceToStackMap;
    private paramMap;
    constructor(app: App, resourceMapping: ResourceToStackMap);
    createStack: (stackName: string) => Stack;
    getStackFor: (resourceId: string, defaultStackName?: string | undefined) => Stack;
    getStack: (stackName: string) => Stack;
    getCloudFormationTemplates: () => Map<string, import("../transformation/types").default>;
    getMappingTemplates: () => Map<string, string>;
    addParameter: (name: string, props: CfnParameterProps) => CfnParameter;
    getParameter: (name: string) => CfnParameter | void;
}
//# sourceMappingURL=stack-manager.d.ts.map