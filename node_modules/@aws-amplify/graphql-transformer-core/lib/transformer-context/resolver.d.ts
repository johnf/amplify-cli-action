import { TransformerResolverProvider, DataSourceProvider, TransformerContextProvider, TransformerResolversManagerProvider, AppSyncFunctionConfigurationProvider, MappingTemplateProvider, GraphQLAPIProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { Stack } from '@aws-cdk/core';
export declare class ResolverManager implements TransformerResolversManagerProvider {
    private resolvers;
    generateQueryResolver: (typeName: string, fieldName: string, dataSource: DataSourceProvider, requestMappingTemplate: MappingTemplateProvider, responseMappingTemplate: MappingTemplateProvider) => TransformerResolver;
    generateMutationResolver: (typeName: string, fieldName: string, dataSource: DataSourceProvider, requestMappingTemplate: MappingTemplateProvider, responseMappingTemplate: MappingTemplateProvider) => TransformerResolver;
    generateSubscriptionResolver: (typeName: string, fieldName: string, requestMappingTemplate: MappingTemplateProvider, responseMappingTemplate: MappingTemplateProvider) => TransformerResolver;
    addResolver: (typeName: string, fieldName: string, resolver: TransformerResolverProvider) => TransformerResolverProvider;
    getResolver: (typeName: string, fieldName: string) => TransformerResolverProvider | void;
    removeResolver: (typeName: string, fieldName: string) => TransformerResolverProvider;
    collectResolvers: () => Map<string, TransformerResolverProvider>;
}
export declare class TransformerResolver implements TransformerResolverProvider {
    private typeName;
    private fieldName;
    private requestMappingTemplate;
    private responseMappingTemplate;
    private requestSlots;
    private responseSlots;
    private datasource?;
    private readonly slotMap;
    private readonly slotNames;
    private stack?;
    constructor(typeName: string, fieldName: string, requestMappingTemplate: MappingTemplateProvider, responseMappingTemplate: MappingTemplateProvider, requestSlots: string[], responseSlots: string[], datasource?: DataSourceProvider | undefined);
    mapToStack: (stack: Stack) => void;
    addToSlot: (slotName: string, requestMappingTemplate: MappingTemplateProvider, responseMappingTemplate?: import("@aws-amplify/graphql-transformer-interfaces").InlineMappingTemplateProvider | import("@aws-amplify/graphql-transformer-interfaces").S3MappingTemplateProvider | undefined, dataSource?: DataSourceProvider | undefined) => void;
    synthesize: (context: TransformerContextProvider, api: GraphQLAPIProvider) => void;
    synthesizePipelineFunctions: (stack: Stack, api: GraphQLAPIProvider, slotsNames: string[]) => AppSyncFunctionConfigurationProvider[];
    private substitueSlotInfo;
    private ensureNoneDataSource;
}
//# sourceMappingURL=resolver.d.ts.map