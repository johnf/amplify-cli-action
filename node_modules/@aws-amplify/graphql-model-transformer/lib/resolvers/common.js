"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateResolverKey = exports.generateDefaultResponseMappingTemplate = exports.generateConditionSlot = void 0;
const graphql_mapping_template_1 = require("graphql-mapping-template");
const generateConditionSlot = (inputConditionObjectName, conditionOutputVariableName) => {
    const statements = [
        graphql_mapping_template_1.comment('Start Condtion block'),
        graphql_mapping_template_1.iff(graphql_mapping_template_1.and([graphql_mapping_template_1.ref(inputConditionObjectName), graphql_mapping_template_1.notEquals(graphql_mapping_template_1.methodCall(graphql_mapping_template_1.ref('inputConditionObjectName.size')), graphql_mapping_template_1.int(0))]), graphql_mapping_template_1.compoundExpression([
            graphql_mapping_template_1.set(graphql_mapping_template_1.ref('mergedConditions'), graphql_mapping_template_1.obj({ and: graphql_mapping_template_1.ref(inputConditionObjectName) })),
            graphql_mapping_template_1.set(graphql_mapping_template_1.ref(conditionOutputVariableName), graphql_mapping_template_1.methodCall(graphql_mapping_template_1.ref('util.parseJson'), graphql_mapping_template_1.methodCall(graphql_mapping_template_1.ref('util.transform.toDynamoDBConditionExpression'), graphql_mapping_template_1.ref('mergedConditions')))),
            graphql_mapping_template_1.iff(graphql_mapping_template_1.and([
                graphql_mapping_template_1.ref(`${conditionOutputVariableName}.expressionValues`),
                graphql_mapping_template_1.equals(graphql_mapping_template_1.methodCall(graphql_mapping_template_1.ref(`${conditionOutputVariableName}.expressionValues.size`)), graphql_mapping_template_1.int(0)),
            ]), graphql_mapping_template_1.set(graphql_mapping_template_1.ref(conditionOutputVariableName), graphql_mapping_template_1.obj({
                expression: graphql_mapping_template_1.ref(`${conditionOutputVariableName}.expression`),
                expressionNames: graphql_mapping_template_1.ref(`${conditionOutputVariableName}.expressionNames`),
            }))),
            graphql_mapping_template_1.comment('End Condtion block'),
        ])),
    ];
    return graphql_mapping_template_1.compoundExpression(statements);
};
exports.generateConditionSlot = generateConditionSlot;
const generateDefaultResponseMappingTemplate = () => {
    const statements = [
        graphql_mapping_template_1.ifElse(graphql_mapping_template_1.ref('ctx.error'), graphql_mapping_template_1.methodCall(graphql_mapping_template_1.ref('util.error'), graphql_mapping_template_1.ref('ctx.error.message'), graphql_mapping_template_1.ref('ctx.error.type')), graphql_mapping_template_1.toJson(graphql_mapping_template_1.ref('ctx.result'))),
    ];
    return graphql_mapping_template_1.printBlock('Get ResponseTemplate')(graphql_mapping_template_1.compoundExpression(statements));
};
exports.generateDefaultResponseMappingTemplate = generateDefaultResponseMappingTemplate;
const generateResolverKey = (typeName, fieldName) => {
    return `${typeName}.${fieldName}`;
};
exports.generateResolverKey = generateResolverKey;
//# sourceMappingURL=common.js.map